
SMART_HOME_SLAVE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003d0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000424  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000424  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000454  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  00000490  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000eda  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d4  00000000  00000000  000014a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008f5  00000000  00000000  00001d76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000024c  00000000  00000000  0000266c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000050a  00000000  00000000  000028b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005a1  00000000  00000000  00002dc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  00003363  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__vector_12>
  34:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_13>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  54:	97 01       	movw	r18, r14
  56:	9a 01       	movw	r18, r20
  58:	9d 01       	movw	r18, r26
  5a:	a0 01       	movw	r20, r0
  5c:	a3 01       	movw	r20, r6
  5e:	a6 01       	movw	r20, r12
  60:	a9 01       	movw	r20, r18
  62:	ac 01       	movw	r20, r24

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf e5       	ldi	r28, 0x5F	; 95
  6a:	d8 e0       	ldi	r29, 0x08	; 8
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61
  70:	0e 94 75 01 	call	0x2ea	; 0x2ea <main>
  74:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_SetDir>:
		case PORT_D:
		value = get_bit(PIND, pinNumber);
		break;
	}
	return value;
}
  7c:	44 23       	and	r20, r20
  7e:	19 f0       	breq	.+6      	; 0x86 <DIO_SetDir+0xa>
  80:	41 30       	cpi	r20, 0x01	; 1
  82:	c9 f1       	breq	.+114    	; 0xf6 <DIO_SetDir+0x7a>
  84:	08 95       	ret
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	91 f0       	breq	.+36     	; 0xae <DIO_SetDir+0x32>
  8a:	28 f0       	brcs	.+10     	; 0x96 <DIO_SetDir+0x1a>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	d9 f0       	breq	.+54     	; 0xc6 <DIO_SetDir+0x4a>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	29 f1       	breq	.+74     	; 0xde <DIO_SetDir+0x62>
  94:	08 95       	ret
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_SetDir+0x26>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_SetDir+0x22>
  a6:	80 95       	com	r24
  a8:	82 23       	and	r24, r18
  aa:	8a bb       	out	0x1a, r24	; 26
  ac:	08 95       	ret
  ae:	27 b3       	in	r18, 0x17	; 23
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	02 c0       	rjmp	.+4      	; 0xba <DIO_SetDir+0x3e>
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <DIO_SetDir+0x3a>
  be:	80 95       	com	r24
  c0:	82 23       	and	r24, r18
  c2:	87 bb       	out	0x17, r24	; 23
  c4:	08 95       	ret
  c6:	24 b3       	in	r18, 0x14	; 20
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <DIO_SetDir+0x56>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <DIO_SetDir+0x52>
  d6:	80 95       	com	r24
  d8:	82 23       	and	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_SetDir+0x6e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_SetDir+0x6a>
  ee:	80 95       	com	r24
  f0:	82 23       	and	r24, r18
  f2:	81 bb       	out	0x11, r24	; 17
  f4:	08 95       	ret
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	89 f0       	breq	.+34     	; 0x11c <DIO_SetDir+0xa0>
  fa:	28 f0       	brcs	.+10     	; 0x106 <DIO_SetDir+0x8a>
  fc:	82 30       	cpi	r24, 0x02	; 2
  fe:	c9 f0       	breq	.+50     	; 0x132 <DIO_SetDir+0xb6>
 100:	83 30       	cpi	r24, 0x03	; 3
 102:	11 f1       	breq	.+68     	; 0x148 <DIO_SetDir+0xcc>
 104:	08 95       	ret
 106:	2a b3       	in	r18, 0x1a	; 26
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	02 c0       	rjmp	.+4      	; 0x112 <DIO_SetDir+0x96>
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	6a 95       	dec	r22
 114:	e2 f7       	brpl	.-8      	; 0x10e <DIO_SetDir+0x92>
 116:	82 2b       	or	r24, r18
 118:	8a bb       	out	0x1a, r24	; 26
 11a:	08 95       	ret
 11c:	27 b3       	in	r18, 0x17	; 23
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_SetDir+0xac>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_SetDir+0xa8>
 12c:	82 2b       	or	r24, r18
 12e:	87 bb       	out	0x17, r24	; 23
 130:	08 95       	ret
 132:	24 b3       	in	r18, 0x14	; 20
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <DIO_SetDir+0xc2>
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <DIO_SetDir+0xbe>
 142:	82 2b       	or	r24, r18
 144:	84 bb       	out	0x14, r24	; 20
 146:	08 95       	ret
 148:	21 b3       	in	r18, 0x11	; 17
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_SetDir+0xd8>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_SetDir+0xd4>
 158:	80 95       	com	r24
 15a:	82 23       	and	r24, r18
 15c:	81 bb       	out	0x11, r24	; 17
 15e:	08 95       	ret

00000160 <DIO_SetValue>:


void DIO_SetValue(uint8_t portNumber , uint8_t pinNumber, uint8_t value)
  {
	  switch (value)
 160:	44 23       	and	r20, r20
 162:	19 f0       	breq	.+6      	; 0x16a <DIO_SetValue+0xa>
 164:	41 30       	cpi	r20, 0x01	; 1
 166:	c9 f1       	breq	.+114    	; 0x1da <DIO_SetValue+0x7a>
 168:	08 95       	ret
	  {
    	  case LOW:														   
		  switch(portNumber)
 16a:	81 30       	cpi	r24, 0x01	; 1
 16c:	91 f0       	breq	.+36     	; 0x192 <DIO_SetValue+0x32>
 16e:	28 f0       	brcs	.+10     	; 0x17a <DIO_SetValue+0x1a>
 170:	82 30       	cpi	r24, 0x02	; 2
 172:	d9 f0       	breq	.+54     	; 0x1aa <DIO_SetValue+0x4a>
 174:	83 30       	cpi	r24, 0x03	; 3
 176:	29 f1       	breq	.+74     	; 0x1c2 <DIO_SetValue+0x62>
 178:	08 95       	ret
		  {
		  case PORT_A :
		  clr_bit(PORTA, pinNumber);
 17a:	2b b3       	in	r18, 0x1b	; 27
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_SetValue+0x26>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	6a 95       	dec	r22
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_SetValue+0x22>
 18a:	80 95       	com	r24
 18c:	82 23       	and	r24, r18
 18e:	8b bb       	out	0x1b, r24	; 27
		  break;
 190:	08 95       	ret
		  case PORT_B:
		  clr_bit(PORTB, pinNumber);
 192:	28 b3       	in	r18, 0x18	; 24
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 c0       	rjmp	.+4      	; 0x19e <DIO_SetValue+0x3e>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	6a 95       	dec	r22
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <DIO_SetValue+0x3a>
 1a2:	80 95       	com	r24
 1a4:	82 23       	and	r24, r18
 1a6:	88 bb       	out	0x18, r24	; 24
		  break;
 1a8:	08 95       	ret
		  case PORT_C:
		  clr_bit(PORTC, pinNumber);
 1aa:	25 b3       	in	r18, 0x15	; 21
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_SetValue+0x56>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_SetValue+0x52>
 1ba:	80 95       	com	r24
 1bc:	82 23       	and	r24, r18
 1be:	85 bb       	out	0x15, r24	; 21
		  break;
 1c0:	08 95       	ret
		  case PORT_D:
		  clr_bit(PORTD, pinNumber);
 1c2:	22 b3       	in	r18, 0x12	; 18
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_SetValue+0x6e>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	6a 95       	dec	r22
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_SetValue+0x6a>
 1d2:	80 95       	com	r24
 1d4:	82 23       	and	r24, r18
 1d6:	82 bb       	out	0x12, r24	; 18
		  break;
 1d8:	08 95       	ret
		  }
      break;
		  case HIGH:
		  switch(portNumber)
 1da:	81 30       	cpi	r24, 0x01	; 1
 1dc:	89 f0       	breq	.+34     	; 0x200 <DIO_SetValue+0xa0>
 1de:	28 f0       	brcs	.+10     	; 0x1ea <DIO_SetValue+0x8a>
 1e0:	82 30       	cpi	r24, 0x02	; 2
 1e2:	c9 f0       	breq	.+50     	; 0x216 <DIO_SetValue+0xb6>
 1e4:	83 30       	cpi	r24, 0x03	; 3
 1e6:	11 f1       	breq	.+68     	; 0x22c <DIO_SetValue+0xcc>
 1e8:	08 95       	ret
     	  {
		  case PORT_A:
		  set_bit(PORTA, pinNumber);
 1ea:	2b b3       	in	r18, 0x1b	; 27
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_SetValue+0x96>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_SetValue+0x92>
 1fa:	82 2b       	or	r24, r18
 1fc:	8b bb       	out	0x1b, r24	; 27
		  break;
 1fe:	08 95       	ret
		  case PORT_B:
		  set_bit(PORTB, pinNumber);
 200:	28 b3       	in	r18, 0x18	; 24
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_SetValue+0xac>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_SetValue+0xa8>
 210:	82 2b       	or	r24, r18
 212:	88 bb       	out	0x18, r24	; 24
		  break;
 214:	08 95       	ret
		  case PORT_C:
		  set_bit(PORTC, pinNumber);	
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_SetValue+0xc2>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_SetValue+0xbe>
 226:	82 2b       	or	r24, r18
 228:	85 bb       	out	0x15, r24	; 21
		  break;
 22a:	08 95       	ret
		  case PORT_D:
		  set_bit(PORTD, pinNumber);
 22c:	22 b3       	in	r18, 0x12	; 18
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_SetValue+0xd8>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_SetValue+0xd4>
 23c:	82 2b       	or	r24, r18
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret

00000242 <ECU_Init>:
				  

void ECU_Init(void)
{
	
	DIO_SetDir(LED1_PORT , LED1_PIN , OUTPUT);
 242:	41 e0       	ldi	r20, 0x01	; 1
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SetDir>
	DIO_SetDir(LED2_PORT , LED2_PIN , OUTPUT);
 24c:	41 e0       	ldi	r20, 0x01	; 1
 24e:	61 e0       	ldi	r22, 0x01	; 1
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SetDir>
	DIO_SetDir(LED3_PORT , LED3_PIN , OUTPUT);
 256:	41 e0       	ldi	r20, 0x01	; 1
 258:	62 e0       	ldi	r22, 0x02	; 2
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SetDir>
 260:	08 95       	ret

00000262 <LED1_ON>:
}


void LED1_ON(void)
{
	DIO_SetValue(LED1_PORT , LED1_PIN , HIGH);
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	60 e0       	ldi	r22, 0x00	; 0
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 26c:	08 95       	ret

0000026e <LED1_OFF>:
	
}

void LED1_OFF(void)
{
	DIO_SetValue(LED1_PORT , LED1_PIN, LOW);
 26e:	40 e0       	ldi	r20, 0x00	; 0
 270:	60 e0       	ldi	r22, 0x00	; 0
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 278:	08 95       	ret

0000027a <LED2_ON>:
}

void LED2_ON(void)
{
	DIO_SetValue(LED2_PORT , LED2_PIN , HIGH);
 27a:	41 e0       	ldi	r20, 0x01	; 1
 27c:	61 e0       	ldi	r22, 0x01	; 1
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 284:	08 95       	ret

00000286 <LED2_OFF>:
}

void LED2_OFF(void)
{
	DIO_SetValue(LED2_PORT , LED2_PIN, LOW);
 286:	40 e0       	ldi	r20, 0x00	; 0
 288:	61 e0       	ldi	r22, 0x01	; 1
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 290:	08 95       	ret

00000292 <LED3_ON>:
}
void LED3_ON(void)
{
	DIO_SetValue(LED3_PORT , LED3_PIN , HIGH);
 292:	41 e0       	ldi	r20, 0x01	; 1
 294:	62 e0       	ldi	r22, 0x02	; 2
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 29c:	08 95       	ret

0000029e <LED3_OFF>:
}

void LED3_OFF(void)
{
	DIO_SetValue(LED3_PORT , LED3_PIN, LOW);
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	62 e0       	ldi	r22, 0x02	; 2
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 2a8:	08 95       	ret

000002aa <ALL_LEDS_ON>:
}
void ALL_LEDS_ON(void)
{
	DIO_SetValue(LED1_PORT , LED1_PIN , HIGH);
 2aa:	41 e0       	ldi	r20, 0x01	; 1
 2ac:	60 e0       	ldi	r22, 0x00	; 0
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
	DIO_SetValue(LED2_PORT , LED2_PIN , HIGH);
 2b4:	41 e0       	ldi	r20, 0x01	; 1
 2b6:	61 e0       	ldi	r22, 0x01	; 1
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
	DIO_SetValue(LED3_PORT , LED3_PIN , HIGH);
 2be:	41 e0       	ldi	r20, 0x01	; 1
 2c0:	62 e0       	ldi	r22, 0x02	; 2
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 2c8:	08 95       	ret

000002ca <ALL_LEDS_OFF>:
}

void ALL_LEDS_OFF(void)
{
	DIO_SetValue(LED1_PORT , LED1_PIN , LOW);
 2ca:	40 e0       	ldi	r20, 0x00	; 0
 2cc:	60 e0       	ldi	r22, 0x00	; 0
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
	DIO_SetValue(LED2_PORT , LED2_PIN , LOW);
 2d4:	40 e0       	ldi	r20, 0x00	; 0
 2d6:	61 e0       	ldi	r22, 0x01	; 1
 2d8:	80 e0       	ldi	r24, 0x00	; 0
 2da:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
	DIO_SetValue(LED3_PORT , LED3_PIN , LOW);
 2de:	40 e0       	ldi	r20, 0x00	; 0
 2e0:	62 e0       	ldi	r22, 0x02	; 2
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_SetValue>
 2e8:	08 95       	ret

000002ea <main>:

#include "CPU_Configurations.h"

int main(void)
{
   ECU_Init();
 2ea:	0e 94 21 01 	call	0x242	; 0x242 <ECU_Init>
  
  SPI_initSlaveMode();
 2ee:	0e 94 bf 01 	call	0x37e	; 0x37e <SPI_initSlaveMode>
 2f2:	ff cf       	rjmp	.-2      	; 0x2f2 <main+0x8>

000002f4 <__vector_12>:
	  _delay_ms(100);
	  
  }	*/
}
 ISR(SPI_STC_vect)
 {
 2f4:	1f 92       	push	r1
 2f6:	0f 92       	push	r0
 2f8:	0f b6       	in	r0, 0x3f	; 63
 2fa:	0f 92       	push	r0
 2fc:	11 24       	eor	r1, r1
 2fe:	2f 93       	push	r18
 300:	3f 93       	push	r19
 302:	4f 93       	push	r20
 304:	5f 93       	push	r21
 306:	6f 93       	push	r22
 308:	7f 93       	push	r23
 30a:	8f 93       	push	r24
 30c:	9f 93       	push	r25
 30e:	af 93       	push	r26
 310:	bf 93       	push	r27
 312:	ef 93       	push	r30
 314:	ff 93       	push	r31
   char data = SPDR;
 316:	ef b1       	in	r30, 0x0f	; 15
 	 switch(data)
 318:	8e 2f       	mov	r24, r30
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	fc 01       	movw	r30, r24
 31e:	f1 97       	sbiw	r30, 0x31	; 49
 320:	e8 30       	cpi	r30, 0x08	; 8
 322:	f1 05       	cpc	r31, r1
 324:	d8 f4       	brcc	.+54     	; 0x35c <__vector_12+0x68>
 326:	e6 5d       	subi	r30, 0xD6	; 214
 328:	ff 4f       	sbci	r31, 0xFF	; 255
 32a:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__tablejump2__>
 	 {
	 	 case '1' : { LED1_ON();break; }
 32e:	0e 94 31 01 	call	0x262	; 0x262 <LED1_ON>
 332:	14 c0       	rjmp	.+40     	; 0x35c <__vector_12+0x68>
	 	 case '2' : { LED1_OFF();break; }
 334:	0e 94 37 01 	call	0x26e	; 0x26e <LED1_OFF>
 338:	11 c0       	rjmp	.+34     	; 0x35c <__vector_12+0x68>
	 	 case '3' : { LED2_ON();break; }
 33a:	0e 94 3d 01 	call	0x27a	; 0x27a <LED2_ON>
 33e:	0e c0       	rjmp	.+28     	; 0x35c <__vector_12+0x68>
	 	 case '4' : { LED2_OFF();break; }
 340:	0e 94 43 01 	call	0x286	; 0x286 <LED2_OFF>
 344:	0b c0       	rjmp	.+22     	; 0x35c <__vector_12+0x68>
	 	 case '5' : { LED3_ON();break; }
 346:	0e 94 49 01 	call	0x292	; 0x292 <LED3_ON>
 34a:	08 c0       	rjmp	.+16     	; 0x35c <__vector_12+0x68>
	 	 case '6' : { LED3_OFF();break; }
 34c:	0e 94 4f 01 	call	0x29e	; 0x29e <LED3_OFF>
 350:	05 c0       	rjmp	.+10     	; 0x35c <__vector_12+0x68>
	 	 case '7' : { ALL_LEDS_ON();break; }
 352:	0e 94 55 01 	call	0x2aa	; 0x2aa <ALL_LEDS_ON>
 356:	02 c0       	rjmp	.+4      	; 0x35c <__vector_12+0x68>
	 	 case '8' : { ALL_LEDS_OFF();break; }
 358:	0e 94 65 01 	call	0x2ca	; 0x2ca <ALL_LEDS_OFF>
	 	 
 	 }
 
 }
 35c:	ff 91       	pop	r31
 35e:	ef 91       	pop	r30
 360:	bf 91       	pop	r27
 362:	af 91       	pop	r26
 364:	9f 91       	pop	r25
 366:	8f 91       	pop	r24
 368:	7f 91       	pop	r23
 36a:	6f 91       	pop	r22
 36c:	5f 91       	pop	r21
 36e:	4f 91       	pop	r20
 370:	3f 91       	pop	r19
 372:	2f 91       	pop	r18
 374:	0f 90       	pop	r0
 376:	0f be       	out	0x3f, r0	; 63
 378:	0f 90       	pop	r0
 37a:	1f 90       	pop	r1
 37c:	18 95       	reti

0000037e <SPI_initSlaveMode>:
void SPI_initSlaveMode(void)
{

		///  set pin direction
		// set SS pin as input
		clr_bit(DDRB,PIN_4);
 37e:	87 b3       	in	r24, 0x17	; 23
 380:	8f 7e       	andi	r24, 0xEF	; 239
 382:	87 bb       	out	0x17, r24	; 23
		// set MOSI pin as input
		clr_bit(DDRB,PIN_5);
 384:	87 b3       	in	r24, 0x17	; 23
 386:	8f 7d       	andi	r24, 0xDF	; 223
 388:	87 bb       	out	0x17, r24	; 23
		// set MISO pin as output
		set_bit(DDRB,PIN_6);
 38a:	87 b3       	in	r24, 0x17	; 23
 38c:	80 64       	ori	r24, 0x40	; 64
 38e:	87 bb       	out	0x17, r24	; 23
		// set SCK pin as input
		clr_bit(DDRB,PIN_7);
 390:	87 b3       	in	r24, 0x17	; 23
 392:	8f 77       	andi	r24, 0x7F	; 127
 394:	87 bb       	out	0x17, r24	; 23
		

		//  set interrupt mode , prescale , clock phase , clock polarity and data order
		SPCR = 0;
 396:	1d b8       	out	0x0d, r1	; 13
		
		// Enable SPI interrupt
		set_bit(SPCR,SPIE);
 398:	8d b1       	in	r24, 0x0d	; 13
 39a:	80 68       	ori	r24, 0x80	; 128
 39c:	8d b9       	out	0x0d, r24	; 13
		set_bit(SREG,7);
 39e:	8f b7       	in	r24, 0x3f	; 63
 3a0:	80 68       	ori	r24, 0x80	; 128
 3a2:	8f bf       	out	0x3f, r24	; 63

		// enable SPI
		set_bit(SPCR,SPE);
 3a4:	8d b1       	in	r24, 0x0d	; 13
 3a6:	80 64       	ori	r24, 0x40	; 64
 3a8:	8d b9       	out	0x0d, r24	; 13
 3aa:	08 95       	ret

000003ac <__vector_13>:
#include "USART.h"



ISR(USART_RXC_vect)
{
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	0f 92       	push	r0
 3b4:	11 24       	eor	r1, r1
	
	
	
}
 3b6:	0f 90       	pop	r0
 3b8:	0f be       	out	0x3f, r0	; 63
 3ba:	0f 90       	pop	r0
 3bc:	1f 90       	pop	r1
 3be:	18 95       	reti

000003c0 <__tablejump2__>:
 3c0:	ee 0f       	add	r30, r30
 3c2:	ff 1f       	adc	r31, r31
 3c4:	05 90       	lpm	r0, Z+
 3c6:	f4 91       	lpm	r31, Z
 3c8:	e0 2d       	mov	r30, r0
 3ca:	09 94       	ijmp

000003cc <_exit>:
 3cc:	f8 94       	cli

000003ce <__stop_program>:
 3ce:	ff cf       	rjmp	.-2      	; 0x3ce <__stop_program>
